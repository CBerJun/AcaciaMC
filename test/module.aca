# Test file for modules in Acacia

#* math: Math utilities *#
import math
x: int = math.randint(1, 10)  # Random integer between 1 ~ 10
y: int = math.pow(2, x)  # 2 to the power of `x`
x = math.max(x, y, 50)  # Maximum of all the given arguments
x = math.pow(2, 5)  # 32
x = math.pow(x, 4)
x = math.min(x + 10, y + 20)
y = math.mod(x, 10)
y = math.mod(-5, 3)  # 1
y = math.floordiv(x, 5)
y = math.floordiv(-5, 3)  # -2

#* print: Output and formatting *#
import print
const fs1 = print.format("ab%1cd%%%{a}%x%{0}", x, y, a=1)
# Usage of % escape is similar to this in Python
print.tell(fs1)
const fs2 = print.format("an%0", x)
const s = "some string"
player := Engroup[Entity]()
player.select(Enfilter().distance_from(Pos(10, 10, 10), max=2))
print.tell(print.format("fs1: %0, fs2: %1, s: " + s, fs1, fs2), player)
print.title(fs2)
print.title(s, target=player, mode=print.ACTIONBAR, stay_time=100)
print.title_clear(player)
# Localization keys
print.tell(print.format(
    "Give me a %0!",
    print.translate("item.diamond.name")
))

#* schedule: Working through several ticks *#
import schedule
x = 10
def foo():
    x += 1
const task = schedule.Task(foo)
task.after(20)
task.on_tickingarea("Area")

def foo2(n: int):
    x += n
schedule.register_loop(foo2, interval=5, n=1)

#* Importing another Acacia program *#
# Import `mod` module from current directory and rename it as `testmod`
import .mod as testmod
# Import `mod.test` as `test_function`
from .mod import test as test_function
# Import everything from `mod`
from .mod import *
# The following lines all call the same function
b := testmod.test(-10)
b = test_function(-10)
b = test(-10)
const f = testmod.get_counter()
f()
f()

#* Importing a module written in Python *#
import .test_mod
entity X:
    pass
ent := X()
test_mod.foo(x, g=ent, z="\u0030", k=10, m="ss", l=1)
test_mod.bar(1)
test_mod.extbar()
